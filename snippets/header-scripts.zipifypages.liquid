{% capture zp_entity_values %}
  {% assign zp_entity_verification = '' | append: article %}
  {% assign zp_entity_verification = zp_entity_verification | append: blog %}
  {% assign zp_entity_verification = zp_entity_verification | append: page %}

  {% if zp_entity_verification contains 'ArticleDrop' %}
    <link rel='stylesheet' type='text/css' href='https://zipifypages.zipify.com/articles_style/{{ shop.permanent_domain | sha1 }}/{{ article.id | sha1 }}.css'>
    {% assign zp_current_entity = article %}
    {% assign zp_current_entity_content = '' | append: article.content %}
    {% assign zp_entity_attributes_class = 'aac' %}
    {% assign zp_scripts_metafield_key = 'articlescripts' %}
    {% assign zp_entity_data_metafield_key = 'articledata' %}
  {% elsif zp_entity_verification contains 'BlogDrop' %}
    <link rel='stylesheet' type='text/css' href='https://zipifypages.zipify.com/blogs_style/{{ shop.permanent_domain | sha1 }}/{{ blog.id | sha1 }}.css'>
    {% assign zp_current_entity = blog %}
    {% assign zp_current_entity_content = '' | append: blog.metafields['zipifypagesblogparts']['blogheaderfooter'] %}
    {% assign zp_entity_attributes_class = 'bac' %}
    {% assign zp_scripts_metafield_key = 'blogscripts' %}
    {% assign zp_entity_data_metafield_key = 'blogdata' %}
  {% elsif zp_entity_verification contains 'PageDrop' %}
    <link rel='stylesheet' type='text/css' href='https://zipifypages.zipify.com/pages_style/{{ shop.permanent_domain | sha1 }}/{{ page.id | sha1 }}.css'>
    {% assign zp_current_entity = page %}
    {% assign zp_current_entity_content = '' | append: page.content %}
    {% assign zp_entity_attributes_class = 'pac' %}
    {% assign zp_scripts_metafield_key = 'pagescripts' %}
    {% assign zp_entity_data_metafield_key = 'pagedata' %}
  {% endif %}
{% endcapture %}{{ zp_entity_values | strip }}
{% include 'page-content-parser.zipifypages' %}{% capture zp_open_graph_html %}
  {% assign zp_page_title = page_title | remove: ':|~|:' | remove: ':--:' %}
  {% assign zp_page_description = '' | append: zp_current_entity.metafields['global']['description_tag'] | strip %}
  {% assign zp_page_description_size = zp_page_description | size %}
  {% if zp_page_description_size < 1 %}
    {% assign zp_page_description = '' | append: zp_page_content | strip | strip_html | strip | newline_to_br | strip_newlines | strip | replace: ':|~|:', '' | replace: ':--:', '' %}
    {% assign zp_page_description = zp_page_description | replace: '<br />', ' ' | replace: '<br/>', ' ' | replace: '<br>', ' ' %}
    {% assign zp_page_description_parts = zp_page_description | split: ' ' %}
    {% assign zp_page_description = '' %}
    {% for zp_part in zp_page_description_parts %}
      {% assign zp_content_part = zp_part | strip %}
      {% assign zp_content_part_size = zp_content_part | size %}
      {% if zp_content_part_size > 0 %}{% assign zp_page_description = zp_page_description | append: ' ' | append: zp_content_part %}{% endif %}
    {% endfor %}
    {% assign zp_page_description = zp_page_description | strip | truncate: 160, '' %}
  {% endif %}
  {% assign zp_page_description_size = zp_page_description | size %}

  {% capture zp_open_graph_meta_html %}
    <meta property="og:title" content="zps_open_graph_title" />
    <meta property="og:description" content="zps_open_graph_description" />
    <meta property="og:url" content="zps_open_graph_url" />
    <meta property="og:image" content="zps_open_graph_image_url" />
    <meta name="twitter:title" content="zps_open_graph_title" />
    <meta name="twitter:description" content="zps_open_graph_description" />
    <meta name="twitter:image" content="zps_open_graph_image_url" />
  {% endcapture %}

  {% assign zp_open_graph_title = zp_page_title | escape %}{% assign zp_open_graph_description = zp_page_description | escape %}{% assign zp_open_graph_url = canonical_url %}{% assign zp_img_tag = '<' | append: 'img' %}
  {% if zp_page_content contains zp_img_tag %}
    {% assign zp_open_graph_image_url = '' %}
    {% assign zp_img_parts = zp_page_content | split: zp_img_tag %}
    {% for zp_img_part in zp_img_parts %}
      {% assign zp_img_src = zp_img_part | split: ' src=' %}
      {% assign zp_img_src = zp_img_src[1] | split: ' ' | first | split: '' %}
      {% assign zp_img_src_result = '' %}
      {% assign zp_img_src_result_size = 0 %}
      {% for zp_img_src_part in zp_img_src %}
        {% if zp_img_src_part == "'" or zp_img_src_part == '"' %}
          {% if zp_img_src_result_size < 1 %}
            {% continue %}
          {% else %}
            {% break %}
          {% endif %}
        {% endif %}
        {% assign zp_img_src_result = zp_img_src_result | append: zp_img_src_part %}
        {% assign zp_img_src_result_size = zp_img_src_result | size %}
      {% endfor %}
      {% unless zp_img_src_result contains 'assets/no-image-' %}
        {% assign zp_img_src_size = zp_img_src | size %}
        {% if zp_img_src_result_size > 0 %}
          {% assign zp_open_graph_image_url = zp_img_src_result | split: '?' | first %}
          {% break %}
        {% endif %}
      {% endunless %}
    {% endfor %}
  {% else %}
    {% assign zp_open_graph_image_url = '' %}
  {% endif %}
  {% assign zp_open_graph_fields = '' | append: 'open_graph_title:|~|:open_graph_description:|~|:open_graph_url:|~|:open_graph_image_url' | split: ':|~|:' %}
  {% assign zp_open_graph_values = '' | append: zp_open_graph_title | append: ':|~|:' | append: zp_open_graph_description | append: ':|~|:' | append: zp_open_graph_url | append: ':|~|:' | append: zp_open_graph_image_url | split: ':|~|:' %}

  {% assign zp_open_graph_meta_html = zp_open_graph_meta_html | strip %}
  {% assign zp_settings_separator = ':|~|:' %}
  {% assign zp_key_separator = ':--:' %}
  {% assign zp_object_settings_data = '' | append: zp_current_entity.metafields['zipifypages'][zp_entity_data_metafield_key] | strip %}
  {% assign zp_page_data_settings = '' %}
  {% assign zp_article_show_author_option = '' %}
  {% assign zp_article_publish_date_type_option = '' %}
  {% assign zp_article_specific_date_value = '' %}
  {% assign zp_show_blog_articles_authors = '' %}
  {% assign zp_show_blog_articles_publish_date = '' %}
  {% assign zp_settings_keys = '' %}{% assign zp_settings_values = '' %}{% assign zp_object_settings = zp_object_settings_data | strip | split: zp_settings_separator %}{% for zp_setting in zp_object_settings %} {% assign zp_setting_key = zp_setting | strip | split: zp_key_separator %} {% assign zp_remove_setting_key = zp_setting_key | first %} {% assign zp_setting_key = zp_setting_key | first | downcase %} {% assign zp_settings_keys = zp_settings_keys | append: zp_settings_separator | append: zp_setting_key %} {% assign zp_remove_setting_key = zp_remove_setting_key | append: zp_key_separator %} {% assign zp_setting_value = zp_setting | remove_first: zp_remove_setting_key %} {% assign zp_settings_values = zp_settings_values | append: zp_settings_separator | append: zp_setting_value %}{% endfor %}{% assign zp_settings_keys = zp_settings_keys | remove_first: zp_settings_separator %}{% assign zp_settings_values = zp_settings_values | remove_first: zp_settings_separator %}{% assign zp_settings_keys = zp_settings_keys | split: zp_settings_separator %}{% assign zp_settings_values = zp_settings_values | split: zp_settings_separator %}
  {% for zp_setting_key in zp_settings_keys %}
    {% if 'page_settings_data' == zp_setting_key %}
      {% assign zp_page_data_settings = '' | append: zp_settings_values[forloop.index0] | strip %}
    {% elsif 'page_fonts_settings' == zp_setting_key %}
      {% assign zp_page_fonts_settings = '' | append: zp_settings_values[forloop.index0] | strip %}
    {% elsif 'hide_author_option' == zp_setting_key %}
      {% assign zp_article_show_author_option = '' | append: zp_settings_values[forloop.index0] | strip %}
    {% elsif 'publish_date_type_option' == zp_setting_key %}
      {% assign zp_article_publish_date_type_option = '' | append: zp_settings_values[forloop.index0] | strip %}
    {% elsif 'specific_date_value' == zp_setting_key %}
      {% assign zp_article_specific_date_value = '' | append: zp_settings_values[forloop.index0] | strip %}
    {% elsif 'show_blog_articles_authors_option' == zp_setting_key %}
      {% assign zp_show_blog_articles_authors = '' | append: zp_settings_values[forloop.index0] | strip %}
    {% elsif 'show_blog_articles_publish_date_option' == zp_setting_key %}
      {% assign zp_show_blog_articles_publish_date = '' | append: zp_settings_values[forloop.index0] | strip %}
    {% else %}
      {% assign zp_replacement_key = 'zps_' | append: zp_setting_key | downcase %}
      {% assign zp_replacement_value = '' | append: zp_settings_values[forloop.index0] | strip | escape %}
      {% assign zp_replacement_value_size = zp_replacement_value | size %}
      {% if zp_replacement_value_size > 0 %}{% assign zp_open_graph_meta_html = zp_open_graph_meta_html | replace: zp_replacement_key, zp_replacement_value %}{% endif %}
    {% endif %}
  {% endfor %}
  {% for zp_setting_key in zp_open_graph_fields %}
    {% assign zp_replacement_key = 'zps_' | append: zp_setting_key | downcase %}
    {% assign zp_replacement_value = '' | append: zp_open_graph_values[forloop.index0] | strip %}
    {% assign zp_open_graph_meta_html = zp_open_graph_meta_html | replace: zp_replacement_key, zp_replacement_value %}
  {% endfor %}
  {{ zp_open_graph_meta_html | strip }}
{% endcapture %}{% if zp_use_meta_tags == nil or zp_use_meta_tags == true %}<title>{{ zp_page_title }}</title>
{% if zp_page_description_size > 0 %}<meta name="description" content="{{ zp_page_description | escape }}">{% endif %}
<link rel="canonical" href="{{ canonical_url }}">{% endif %}
{% if zp_use_open_graph_tags == nil or zp_use_open_graph_tags == true %}{{ zp_open_graph_html | strip }}{% endif %}
{% capture zp_custom_favicon_html %}
  {% if zp_use_favicon == true %}
    {% assign zp_custom_favicon = shop.metafields['zipifypages']['faviconpath'] | strip %}
    {% assign zp_custom_favicon_size = zp_custom_favicon | size %}

    {% if zp_custom_favicon_size > 0 %}
      <link rel="shortcut icon" href="{{ zp_custom_favicon }}" type="image/png"/>
    {% else %}
      <zp_favicon_integration><link rel="shortcut icon" href="{{ 'favicon.png' | asset_url }}" type="image/png"/></zp_favicon_integration>
    {% endif %}
  {% endif %}
{% endcapture %}{{ zp_custom_favicon_html | strip | replace: '<zp_favicon_integration>', '' | replace: '</zp_favicon_integration>', '' }}
{% capture zp_webfont_html %}
  <script>try { WebFontConfig = {classes:false,timeout:9000,zps_page_fonts_settings} } catch(e) { console.error(e) }</script>
{% endcapture %}{{ zp_webfont_html | strip | replace: 'zps_page_fonts_settings', zp_page_fonts_settings }}
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.16/webfont.js"></script>
<style>body{font-synthesis:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;}</style>
<link rel='stylesheet' type='text/css' href='https://zipifypages.zipify.com/assets/zipifypages.css'>
<style>html { padding-top:0px !important; }</style>
{% capture zp_page_data %}
  {% assign zp_page_data_settings_size = zp_page_data_settings | size %}
  {% if zp_page_data_settings_size > 0 %}<script type="template/json" id="page">{{ zp_page_data_settings }}</script>{% endif %}
{% endcapture %}{{ zp_page_data | strip }}
{% capture zp_js_scripts %}
  {% assign zp_page_scripts = '' | append: zp_current_entity.metafields['zipifypages'][zp_scripts_metafield_key] | split: '|;|~|;|' %}
  {% assign zp_page_header_scripts = '' | append: zp_page_scripts[0] | strip %}
  {% assign zp_page_footer_scripts = '' | append: zp_page_scripts[1] | strip %}
  {% assign zp_page_header_scripts_size = zp_page_header_scripts | strip | size %}
  {% assign zp_page_footer_scripts_size = zp_page_footer_scripts | strip | size %}
  {% if zp_page_header_scripts_size > 0 %}{{ zp_page_header_scripts }}{% endif %}
{% endcapture %}{{ zp_js_scripts | strip }}
<script>!function(){function n(){}var o=!1,t=[];n.prototype.init=function(){o||(o=!0,t.forEach(function(n){n.call()}),t=[])},n.prototype.ready=function(n){"function"==typeof n&&(o?n.call():t.push(n))},window.ZPShopifyAnalytics=new n}();</script>
{{ content_for_header | replace: 'window.ShopifyAnalytics.merchantGoogleAnalytics.call(', 'window.ZPShopifyAnalytics.init();window.ShopifyAnalytics.merchantGoogleAnalytics.call(' | replace: 'doShift(true)', '' | replace: 'bundle-upsell.smar7apps.com', '' | strip }}