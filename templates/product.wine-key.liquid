{% layout 'theme.bootstrap.landing-page' %}

<link href="https://allfont.net/allfont.css?fonts=montserrat-hairline" rel="stylesheet" type="text/css" />

<div id="glass">
  
  <div class="header-logo" style="border:none;padding-top:40px;">
      <div class="row">
        <div class="col-xs-4 col-xs-offset-4">
          <img src="https://cdn.shopify.com/s/files/1/0924/9540/files/logo-no-text.png?5650425483688270857" >
        </div>
        <div class="col-xs-2 col-xs-offset-2">
          <a href="#cart" class="icon-cart right" style="padding:20px 40px;"><span>{{ cart.item_count }}</span></a>
        </div>
      </div>
  </div>



  <div id="">
    <div class="container" style="padding-bottom:20px;padding-top:0px;">
      <div class="row">
        <div class="col-sm-8 col-sm-offset-2 col-xs-10 col-xs-offset-1">
          <div class="text-center">
            <p>Dry Farm Wines</p>
          </div>
        </div>
      </div>
    </div>
  </div>


  <div class="main-product-section" id="main-product-id" style="background:white; padding-top:0px;">
    <div class="container" style="padding-top:0px;">

      <div class="row" style="">
        
        <div class="col-md-5 col-md-offset-1 col-sm-12 text-center">
          <img style="" src="https://cdn.shopify.com/s/files/1/0924/9540/files/4890_main.jpg?1159960889314360031" />
        </div>
        
        <div class="col-md-5 col-sm-12 text-center">
          <div class="main-product">
            <h1 style="padding:25px 0px 0px 0px;font-size:30px;font-family:'brandon_regular' !important">The Dry Farm Wines</h1>
            <h1 style="font-size:50px;font-family:'brandon_regular' !important;margin-top:-5px;">Wine Key</h1>
            <p style="padding:20px 0 40px 0;">Open your natural wine with this simple, elegant, and functional key: the Viski Signature Copper Edition.</p>

            <h2>Sales are closed.</h2>
            <p> Don't worry; there will be more special offers like this soon. In the meantime, if you want to drink healthier wine, order <a href="/products/wine-membership">here</a>!</p>
            <br />
          </div>
          <br /><br />
        </div>

      </div>
    </div>
  </div>


  <div class="glass-quote" style="padding-top:40px;">
    <div class="container">
      <div class="row">
        <div class="col-xs-10 col-xs-offset-1 text-center">
          <p> 
            <span class="quote-body"> Designed with high quality, this signature corkscrew is a beautiful everyday wine opener. With a double hinged arm, integrated foil cutter, and copper finish, it's a stunning value.</span>
          </p>
        </div>
      </div>
    </div>
  </div>



  <div class="">
    <div class="container">
      <div class="row">
        <div class="col-sm-8 col-sm-offset-2">
          <h1 class="text-center">Why the Copper Viski?</h1>
          <br />
          <p>We open a lot of wine. During the week, we open 15 - 20 bottles a night. We've tested many corkscrews, and the Viski Signature Copper Edition stands out as a brilliant everyday choice.</p>
          <br />
          <p>The main reason why? It actually works. The design is functional, with a double hinge and good weight to easily pop a cork. It also looks beautiful. The signature copper finish shines with polish. </p>
          <br />
          <p>At $15, this wine key is an incredible value. Collect a few for your personal wine cabinet. 
        </div>
      </div>
    </div>
  </div>


  <div class="container">
    <div class="row vertical-align">
      <div class="col-sm-5 col-sm-offset-1">
        <img src="https://cdn.shopify.com/s/files/1/0924/9540/files/31lACsKu0dL.jpg?16133130828529641100">
      </div>

      <div class="col-sm-5 text-center glass-harmony-cta">
        <h1>Elegant Simplicity.</h1>
        <a href="#main-product-id" class="action_button"> Collect Your Wine Key </a>
      </div>
      <br /><br />
    </div>
  </div>

</div>

  


<script text="text/javascript">
  var _learnq = _learnq || [];

  var item = {
    Name: {{ product.title|json }}, 
    ProductID: {{ product.id|json }},
    Categories: {{ product.collections|map:'title'|json }},
    ImageURL: "https:{{ product.featured_image.src|img_url:'grande' }}",
    URL: "{{ shop.secure_url }}{{ product.url }}",
    Brand: {{ product.vendor|json }},
    Price: {{ product.price|money|json }},
    CompareAtPrice: {{ product.compare_at_price_max|money|json }}
  };

  _learnq.push(['track', 'Viewed Product', item]);
  _learnq.push(['trackViewedItem', {
    Title: item.Name,
    ItemId: item.ProductID,
    Categories: item.Categories,
    ImageUrl: item.ImageURL,
    Url: item.URL,
    Metadata: {
      Brand: item.Brand,
      Price: item.Price,
      CompareAtPrice: item.CompareAtPrice
    }
  }]);
  
  
  
  
  
</script>


  
<script>
  $(document).on("click", '.add_to_cart', function(e) {
    window.setTimeout(function () {
      $('#cart').trigger("open");
    }, 1000);
  });
</script>
  



<script>
	/**BEGIN JAVASCRIPT **/
  /** COPIED FROM SUBSCRIPTION-PRODUCT.LIQUID **/
if (subscription_on==true) {

    window.currency_symbol='$'
    window.currency_suffix=''
    
    discount_percentage_metafield_value = {{ product.metafields.subscriptions.discount_percentage | floor }} 
    has_discount_{{product.id}} = false
    if(discount_percentage_metafield_value > 0) {
		has_discount_{{product.id}} = true 
	}
	
	/* for changing background color when a selection is clicked */
	rjQuery('body').on('click','.autodeliver.{{product.id}}',function() {
		rjQuery('.radio_option.{{product.id}}').removeClass('active')
		rjQuery(this).parent().parent().addClass('active')

		if( rjQuery(this).val()=='autodeliver' ) {
			rjQuery('#recurring_purchase_{{product.id}}').addClass('active')
			rjQuery('#single_purchase_{{product.id}}').removeClass('active')
		} else if( rjQuery(this).val()=='onetime' ) {
			rjQuery('#recurring_purchase_{{product.id}}').removeClass('active')
			rjQuery('#single_purchase_{{product.id}}').addClass('active')
		}

		if(has_discount_{{product.id}} == true) {
			updatePrice_{{product.id}}("UPDATE - Change radio");    
		}
	})
	
	 //HANDLE THE ADDING TO CART
	rjQuery( document ).ready(function() {
		// CREATE DUPLICATE SELECT WITH OPTIONS
      	var myDiv = rjQuery('form[data-productid="{{product.id}}"]');
		var discount_prices = discount_variants_array_for_select_{{product.id}}; //discount price options
		//Create and append select list
		var discount_select_menu_html = rjQuery("<select id='discount-select-{{product.id}}'></select>"); 
		myDiv.append(discount_select_menu_html);
		for (var i = 0; i < discount_prices.length; i++) {
			var option = rjQuery('<option></option>').val(discount_prices[i]).html(discount_prices[i])
			discount_select_menu_html.append(option);
		}

        // ADD IDENTIFIERS TO ORIGINAL AND DUPLICATE SELECT        
        var discount_select_{{product.id}} = rjQuery("#discount-select-{{product.id}}")
        discount_select_{{product.id}}.hide();  
        
        var original_select_{{product.id}} = rjQuery('[name="id"][data-productid="{{product.id}}"]')
		original_select_{{product.id}}.addClass('original_select_{{product.id}}')
        // Set value of discount select on page load
        var original_select_menu_value = original_select_{{product.id}}.val();
		var discount_value_of_originally_selected_menu_value = variant_id_to_discount_id_map_{{product.id}}[original_select_menu_value]['discount_variant_id'];
		discount_select_{{product.id}}.val(discount_value_of_originally_selected_menu_value);	

        // using a timeout to wait for shopify to load select elements via javascript
        setTimeout(function(){
        	
        	// INITIALIZE LISTENER FOR WHEN VARIANT DROPDOWN IS CHANGED 
			rjQuery('form[data-productid="{{product.id}}"] .single-option-selector').change(function(){
				
				setTimeout(function(){
					var original_product_value = original_select_{{product.id}}.val();	
					discount_select_{{product.id}}.val(variant_id_to_discount_id_map_{{product.id}}[original_product_value]['discount_variant_id']);	
					
					updatePrice_{{product.id}}();
				}, 400);
				
			})

            // LISTENER FOR WHEN RADIO OPTION FOR ONE-TIME/RECURRING IS CHECKED                
            rjQuery(".autodeliver.{{product.id}}").change(function(){				
				/*IF AUTODELIVER IS SELECTED, WE SET OUR SELECT to name=id and take that attribute off the original select*/	
				if(rjQuery(this).val() == 'autodeliver'){
					// set duplicate select to be submitted 
					original_select_{{product.id}}.attr('name','')
					discount_select_{{product.id}}.attr('name','id')
					//set shipping interval + subscription id attributes to be submitted when form is submitted
					rjQuery("#shipping_interval_frequency_{{product.id}}").attr('name','properties[shipping_interval_frequency]');
					rjQuery("#subscription_id_{{product.id}}").attr('name','properties[subscription_id]');
					rjQuery("#shipping_interval_unit_type_{{product.id}}").attr('name','properties[shipping_interval_unit_type]');

				}
              else if (rjQuery(this).val() == 'onetime') {
                  // set original select to be submitted
                  original_select_{{product.id}}.attr('name','id')
                  discount_select_{{product.id}}.attr('name','')
                  
                  // remove shipping interval + subscription id from form submission since we're not subscription
                  rjQuery("#shipping_interval_frequency_{{product.id}}").attr('name','');
                  rjQuery("#subscription_id_{{product.id}}").attr('name','');
				  rjQuery("#shipping_interval_unit_type_{{product.id}}").attr('name','');
              }
            });
        }, 300); // end setTimeout / initialization of select menu listeners

        // IF SUBSCRIPTION ONLY, preset the subscription inputs
        {% if subscription_only == 'true' %}
			// set duplicate select to be submitted
			original_select_{{product.id}}.attr('name','')
			discount_select_{{product.id}}.attr('name','id')
			
			// set shipping interval + subscription id to be submitted
			rjQuery("#shipping_interval_frequency_{{product.id}}").attr('name','properties[shipping_interval_frequency]');
			rjQuery("#subscription_id_{{product.id}}").attr('name','properties[subscription_id]');
            rjQuery("#shipping_interval_unit_type_{{product.id}}").attr('name','properties[shipping_interval_unit_type]');              
			
        {% endif %}
      });
 
 
	/*** THIS PERFORMS PRICE UPDATE of primary price text above options***/
	function updatePrice_{{product.id}}(debugging_text) {
		var price_selectors = '.current_price, #productPrice, .product-price, .price, #price-preview, .actual-price'
		
		//check for quickbuy and adjust selectors if needed
		if ( rjQuery(price_selectors).size() > 1 ) {
			var has_quickbuy = true
			//the quickbuy price selectors
			price_selectors += ', .current_price.{{product.id}}, #productPrice.{{product.id}}, .product-price.{{product.id}}, .price.{{product.id}}, #price-preview.{{product.id}}'
		}
		
		rjQuery(price_selectors).html(''); //blank out the current price
		var variant_id = rjQuery('.original_select_{{product.id}}').val()      
		var quantity = rjQuery('form[data-productid="{{product.id}}"] [name="quantity"]').val()
	  
		if(typeof quantity === 'undefined'){
			//some sites don't define quantity in the form so we need this as a backup
			quantity = 1;
		}
		
		variant_price_{{product.id}} = (variant_id_to_price_map_{{product.id}}[variant_id] / 100) 
		
		//if recurring is on, set 
		if( rjQuery('#autodeliver_on_radio_{{product.id}}').prop('checked')==true && variant_id_to_discount_id_map_{{product.id}}[variant_id]['discount_variant_id'] !='') {
			variant_price_{{product.id}} = variant_price_to_discount_price_map_{{product.id}}[variant_id]['discount_variant_price']
		} 

		variant_price_{{product.id}} = parseFloat(variant_price_{{product.id}}).toFixed(2)
		var displayed_price = parseFloat(quantity * variant_price_{{product.id}}).toFixed(2)
		var price_string = currency_symbol+' '+displayed_price + currency_suffix
	  
		if(window.first_time_{{product.id}}){
			rjQuery(price_selectors).html(price_string)
		}
		window.first_time_{{product.id}} = true;
		updateInlinePrice_{{product.id}}()
	}

	// This function updates the inline prices (next to radio buttons) 
	function updateInlinePrice_{{product.id}}() {
		var variant_id = rjQuery('.original_select_{{product.id}}').val();
		var price_one_time = (variant_id_to_price_map_{{product.id}}[variant_id] / 100);
		price_one_time = parseFloat(price_one_time).toFixed(2);
        
        var price_recurring = variant_price_to_discount_price_map_{{product.id}}[variant_id]['discount_variant_price']
        price_recurring = parseFloat(price_recurring).toFixed(2);

		rjQuery('#one-time-price_{{product.id}}').text(" "+currency_symbol+ price_one_time + currency_suffix);
		rjQuery('#recurring-time-price_{{product.id}}').text(" "+currency_symbol + price_recurring + currency_suffix);
	}
	
	/** PRICE RELATED DOCUMENT READY **/
	rjQuery(document).ready(function(){
		
		/** make sure correct option has grey border **/
		window.lock_{{product.id}} = false;
		window.first_time_{{product.id}} = true;
		if(rjQuery('#autodeliver_on_radio_{{product.id}}').prop('checked')==true ) {
			rjQuery('#recurring_purchase_{{product.id}}').addClass('active');
		} else {
			rjQuery('#single_purchase_{{product.id}}').addClass('active');
		}
		if(has_discount_{{product.id}} == true) {
			setTimeout(function(){ updatePrice_{{product.id}}("") }, 200);
		}
		
		
		//if something modifies the price, we notice it and then change it back. but we use a timeout function to avoid an infinite loop
		rjQuery('.current_price, #productPrice, .product-price, .price, #price-preview').bind("DOMSubtreeModified",function(){      
			if( window.lock_{{product.id}} == false ) {
				window.lock_{{product.id}} = true;
				if(has_discount_{{product.id}} == true) {
					updatePrice_{{product.id}}("UPDATE - DOMSubtreeModified");
				}
				setTimeout(function(){window.lock_{{product.id}}=false}, 200);
			}
		});
		
		//handle change in quantity
		rjQuery('#quantity').on("change",function(){
			if(has_discount_{{product.id}} == true) {
				updatePrice_{{product.id}}("UPDATE - Qty change on");
			}
		});
		
		//run the price updater once page loads to reset it to what we need it to be				
		updateInlinePrice_{{product.id}}();		
				
	})//end document ready

		

	/** set variant mapping for the case in which there is an automatically created duplicate product **/
	var variant_id_to_discount_id_map_{{product.id}} = {};  
	var variant_price_to_discount_price_map_{{product.id}} ={} 
	var discount_variants_array_for_select_{{product.id}}=[]
	
	{% for variant in product.variants %}
{% unless variant.metafields.secomapp.freegifts %}
{% unless variant.title contains '(Freegifts)' %}

		var discount_variant_id = '{{ variant.metafields.subscriptions.discount_variant_id }}'
		variant_id_to_discount_id_map_{{product.id}}['{{variant.id}}']='' 
		
		if(discount_variant_id) {
			variant_id_to_discount_id_map_{{product.id}}['{{variant.id}}'] = {"discount_variant_id":discount_variant_id};
			discount_variants_array_for_select_{{product.id}}.push(discount_variant_id)
		}
		
		var discount_variant_price = '{{ variant.metafields.subscriptions.discount_variant_price }}'
		variant_price_to_discount_price_map_{{product.id}}['{{variant.id}}']=''
		
		if(discount_variant_price) {
			variant_price_to_discount_price_map_{{product.id}}['{{variant.id}}'] = { "discount_variant_price": discount_variant_price } 
		}

{%endunless%}
{%endunless%}
	{% endfor %}
	
	//map original prices for updated price calculations
	variant_id_to_price_map_{{product.id}}={}
	{% for variant in product.variants %}
{% unless variant.metafields.secomapp.freegifts %}
{% unless variant.title contains '(Freegifts)' %}

		variant_id_to_price_map_{{product.id}}['{{variant.id}}'] = "{{variant.price}}"

{%endunless%}
{%endunless%}
	{% endfor %}

}//end if (subscription_on==true) section
	
</script> 


